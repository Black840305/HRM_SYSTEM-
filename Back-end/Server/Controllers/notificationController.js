// üìå L·∫•y t·∫•t c·∫£ th√¥ng b√°o
const Notifications = require("../models/notificationModel");
const getAllNotifications = async (req, res) => {
  try {
    const notifications = await Notifications.find()
      .populate("recipients", "name email") // L·∫•y th√¥ng tin ng∆∞·ªùi nh·∫≠n
      .populate("department", "name"); // L·∫•y t√™n ph√≤ng ban

    const result = notifications.map((n) => ({
      _id: n._id,
      title: n.title || "Ch∆∞a c·∫≠p nh·∫≠t",
      message: n.message || "Ch∆∞a c·∫≠p nh·∫≠t",
      recipients: n.recipients,
      department: n.department || null,
      urgency: n.urgency,
      status: n.status,
      createdAt: n.createdAt,
      updatedAt: n.updatedAt,
    }));

    return res.json(result);
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y th√¥ng b√°o:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y th√¥ng b√°o" });
  }
};

// üìå L·∫•y th√¥ng b√°o theo ID
const getNotificationById = async (req, res) => {
  try {
    const notification = await Notifications.findById(req.params.id)
      .populate("recipients", "name email")
      .populate("targetDepartment", "name");

    if (!notification)
      return res.status(404).json({ msg: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });

    res.json(notification);
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y th√¥ng b√°o:", err);
    res.status(500).json({ msg: "L·ªói server khi l·∫•y th√¥ng b√°o" });
  }
};

// üìå T·∫°o m·ªõi th√¥ng b√°o
const createNotification = async (req, res) => {
  const { title, message, recipients, targetDepartment, urgency, status } =
    req.body;

  try {
    const newNotification = new Notifications({
      title,
      message,
      recipients: recipients ? recipients.map((id) => id) : [],
      targetDepartment: targetDepartment || null,
      urgency: urgency || "medium",
      status: status || "active",
    });

    await newNotification.save();
    res.status(201).json(newNotification);
  } catch (err) {
    console.error("‚ùå L·ªói khi t·∫°o th√¥ng b√°o:", err);
    res.status(500).json({ msg: "L·ªói server khi t·∫°o th√¥ng b√°o" });
  }
};

// üìå C·∫≠p nh·∫≠t th√¥ng b√°o
const updateNotification = async (req, res) => {
  const { title, message, recipients, targetDepartment, urgency, status } =
    req.body;

  try {
    const notification = await Notifications.findById(req.params.id);
    if (!notification)
      return res.status(404).json({ msg: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });

    notification.title = title || notification.title;
    notification.message = message || notification.message;
    notification.recipients = recipients
      ? recipients.map((id) => id)
      : notification.recipients;
    notification.targetDepartment =
      targetDepartment || notification.targetDepartment;
    notification.urgency = urgency || notification.urgency;
    notification.status = status || notification.status;

    await notification.save();
    res.json(notification);
  } catch (err) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t th√¥ng b√°o:", err);
    res.status(500).json({ msg: "L·ªói server khi c·∫≠p nh·∫≠t th√¥ng b√°o" });
  }
};

// üìå X√≥a th√¥ng b√°o
const deleteNotification = async (req, res) => {
  try {
    const notification = await Notifications.findById(req.params.id);
    if (!notification)
      return res.status(404).json({ msg: "Kh√¥ng t√¨m th·∫•y th√¥ng b√°o" });

    await notification.deleteOne();
    res.json({ msg: "Th√¥ng b√°o ƒë√£ ƒë∆∞·ª£c x√≥a" });
  } catch (err) {
    console.error("‚ùå L·ªói khi x√≥a th√¥ng b√°o:", err);
    res.status(500).json({ msg: "L·ªói server khi x√≥a th√¥ng b√°o" });
  }
};

// Xu·∫•t c√°c h√†m
module.exports = {
  getAllNotifications,
  getNotificationById,
  createNotification,
  updateNotification,
  deleteNotification,
};
